//__SETUP__
sprite.brightness = -100
sprite.size = 2.5
sprite.visible = false

//__LINE_RENDERER__
let lineSize = 10.5
let halfLineSize = 5.25
let errorMargin = 1.5

//__GAME_SETTINGS__
let frameTime = 0.0166666667
frameTime *= 3
let screenWidth = 640
let screenHeight = 480

//__TEXT__
let TextWidth = 0
let LetterWidth = lineSize
let LetterHeight = lineSize * 2
let LetterSpacing = lineSize / 1.5

//__3D_LOGIC__
let Point = { x: 0, y: 0, z: 0 }
let cameraPos = { x: 0, y: 0, z: 0 }
let cameraRot = { x: 0, y: 0, z: 0 }
let fov = 90
let aspect_ratio = screenWidth / screenHeight
let near_plane = 0
let FL = 0
let zBuffer = 0

let sinX = 0
let sinY = 0
let cosX = 0
let cosY = 0
let p = 0
let x1 = 0
let x2 = 0
let y1 = 0
let y2 = 0
let z1 = 0
let z2 = 0

//__GAME_VARIABLES__
let lives = 3
let coins = 0
let playerSize = 2

//__PLAYER_VARIABLES__
let playerPos = { x: 0, y: 0, z: 0 }
let playerVel = { x: 0, y: 0, z: 0 }

//__LINE_OBJECTS__
onCloneStart(function (clone) {
  clone.visible = true
  wait(frameTime * 2)
  clone.visible = false
  deleteClone()
})

init()

let moveS = 0.25
let rotS = 5

//__MAIN_LOOP__
forever(function () {
  draw()
  draw_ui()
  inputs()
  moveCam()
  wait(frameTime)
})

function draw_ui() {
  DrawText(-screenWidth / 2, screenHeight / 2 - 20, [
    "L",
    "I",
    "V",
    "E",
    "S",
    " ",
    "" + lives,
    " ",
    " ",
    " ",
    " ",
    "C",
    "O",
    "I",
    "N",
    "S",
    " ",
    "" + coins,
  ])

  DrawText(-screenWidth / 2, screenHeight / 2 - 60, [
    "X",
    " ",
    "" + Math.clamp(Math.round(Math.abs(cameraPos.x)), 0, 9),
  ])
  DrawText(-screenWidth / 2, screenHeight / 2 - 90, [
    "Y",
    " ",
    "" + Math.clamp(Math.round(Math.abs(cameraPos.y)), 0, 9),
  ])
  DrawText(-screenWidth / 2, screenHeight / 2 - 130, [
    "Z",
    " ",
    "" + Math.clamp(Math.round(Math.abs(cameraPos.z)), 0, 9),
  ])
  DrawText(-screenWidth / 2, screenHeight / 2 - 160, [
    "X",
    " ",
    "" + Math.clamp(Math.round(Math.abs(cameraRot.x)), 0, 9),
  ])
  DrawText(-screenWidth / 2, screenHeight / 2 - 190, [
    "Y",
    " ",
    "" + Math.clamp(Math.round(Math.abs(cameraRot.y)), 0, 9),
  ])
}

function DrawLine(x1: number, y1: number, x2: number, y2: number) {
  if (
    (x1 > screenWidth / 2 && x2 > screenWidth) ||
    (x1 < -screenWidth / 2 && x2 < -screenWidth / 2)
  ) {
    return
  }
  if (
    (y1 > screenHeight / 2 && y1 > screenHeight) ||
    (y1 < -screenHeight / 2 && y2 < -screenHeight / 2)
  ) {
    return
  }
  sprite.x = x1
  sprite.y = y1
  sprite.pointTowards(x2, y2)
  let vx = Math.cos(sprite.rotation)
  let vy = Math.sin(sprite.rotation)
  sprite.rotation += 90
  let linelength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2))
  sprite.x += vx * halfLineSize
  sprite.y -= vy * halfLineSize
  createClone()

  linelength -= lineSize
  while (linelength > errorMargin) {
    sprite.x += vx * lineSize
    sprite.y -= vy * lineSize
    createClone()
    linelength -= lineSize
  }
}

function moveCam() {
  let dist = 13
  let dirZ = Math.cos(cameraRot.y) * Math.cos(cameraRot.x)
  let dirY = Math.sin(cameraRot.x)
  let dirX = Math.sin(cameraRot.y) * Math.cos(cameraRot.x)

  cameraPos.x = playerPos.x + dirX * dist
  cameraPos.y = playerPos.y - dirY * dist
  cameraPos.z = playerPos.z - dirZ * dist
}

function inputs() {
  let dirX = Math.sin(cameraRot.y)
  let dirZ = Math.cos(cameraRot.y)
  let dirXR = Math.sin(cameraRot.y+90)
  let dirZR = Math.cos(cameraRot.y+90)
  
  if (Keyboard.keyHeld(Key.W)) {
  playerPos.x += dirX * moveS
  playerPos.z += dirZ * moveS
  }
  if (Keyboard.keyHeld(Key.S)) {
  playerPos.x -= dirX * moveS
  playerPos.z -= dirZ * moveS
  }
  if (Keyboard.keyHeld(Key.A)) {
  playerPos.x -= dirXR * moveS
  playerPos.z -= dirZR * moveS
  }
  if (Keyboard.keyHeld(Key.D)) {
  playerPos.x += dirXR * moveS
  playerPos.z += dirZR * moveS
  }
  }/*
  if (Keyboard.keyHeld(Key.Space)) {
    cameraPos.y += 1 * moveS
  }
  if (Keyboard.keyHeld(Key.Shift)) {
    cameraPos.y -= 1 * moveS
  }*/
  if (Keyboard.keyHeld(Key.ArrowLeft)) {
    cameraRot.y -= rotS
  }
  if (Keyboard.keyHeld(Key.ArrowRight)) {
    cameraRot.y += rotS
  }
  if (Keyboard.keyHeld(Key.ArrowUp)) {
    cameraRot.x -= rotS
  }
  if (Keyboard.keyHeld(Key.ArrowDown)) {
    cameraRot.x += rotS
  }
}

function GetTextWidth(text: string[]) {
  TextWidth = text.length * LetterWidth + text.length * LetterSpacing
}

function init() {
  near_plane = 0.3
  FL = 300
  cameraPos.x = 10
  cameraPos.y = 10
  cameraPos.z = -10
  cameraRot.x = 0
  cameraRot.y = 90
}
let xs = 0

function draw() {
  InitTrigonometry()

  let s = playerSize
  xs += 8
  //playerPos.y += Math.sin(xs)/16
  let x = playerPos.x
  let y = playerPos.y
  let z = playerPos.z

  Draw3dLine(-s + x, -s + y, -s + z, s + x, -s + y, -s + z, 0.1)
  Draw3dLine(s + x, -s + y, -s + z, s + x, s + y, -s + z, 0.1)
  Draw3dLine(s + x, s + y, -s + z, -s + x, s + y, -s + z, 0.1)
  Draw3dLine(-s + x, s + y, -s + z, -s + x, -s + y, -s + z, 0.1)

  Draw3dLine(-s + x, -s + y, s + z, s + x, -s + y, s + z, 0.1)
  Draw3dLine(s + x, -s + y, s + z, s + x, s + y, s + z, 0.1)
  Draw3dLine(s + x, s + y, s + z, -s + x, s + y, s + z, 0.1)
  Draw3dLine(-s + x, s + y, s + z, -s + x, -s + y, s + z, 0.1)

  Draw3dLine(-s + x, -s + y, -s + z, -s + x, -s + y, s + z, 0.1)
  Draw3dLine(s + x, -s + y, -s + z, s + x, -s + y, s + z, 0.1)
  Draw3dLine(s + x, s + y, -s + z, s + x, s + y, s + z, 0.1)
  Draw3dLine(-s + x, s + y, -s + z, -s + x, s + y, s + z, 0.1)

  Draw3dLine(-6, -6, -6, -6, 6, -6, 0.1)
  
  //Draw3dLine(-1, 0, 3, -1, 0, 4, 0.1)
  //Draw3dLine(-1, 0, 3, -1, 1, 3, 0.1)
}

function SetPoint1(x: number, y: number, z: number) {
  x1 = x
  y1 = y
  z1 = z
}

function SetPoint2(x: number, y: number, z: number) {
  x2 = x
  y2 = y
  z2 = z
}

function InitTrigonometry() {
  sinX = Math.sin(cameraRot.x)
  cosX = Math.cos(cameraRot.x)
  sinY = Math.sin(cameraRot.y)
  cosY = Math.cos(cameraRot.y)
}

function ZClipping() {
  if (z1 < near_plane || z2 < near_plane) {
    p = (near_plane - z1) / (z2 - z1)
    if (z1 < near_plane) {
      SetPoint1(x1 + (x2 - x1) * p, y1 + (y2 - y1) * p, near_plane)
    } else {
      SetPoint2(x1 + (x2 - x1) * p, y1 + (y2 - y1) * p, near_plane)
    }
  }
}

function Draw3dLine(
  dx1: number,
  dy1: number,
  dz1: number,
  dx2: number,
  dy2: number,
  dz2: number,
  size: number,
) {
  SetPoint1(dx1 - cameraPos.x, dy1 - cameraPos.y, dz1 - cameraPos.z)
  SetPoint2(dx2 - cameraPos.x, dy2 - cameraPos.y, dz2 - cameraPos.z)

  SetPoint1(z1 * sinY + x1 * cosY, y1, z1 * cosY - x1 * sinY)
  SetPoint2(z2 * sinY + x2 * cosY, y2, z2 * cosY - x2 * sinY)

  SetPoint1(x1, y1 * cosX - z1 * sinX, y1 * sinX + z1 * cosX)
  SetPoint2(x2, y2 * cosX - z2 * sinX, y2 * sinX + z2 * cosX)
  if (z1 > near_plane || z2 > near_plane) {
    ZClipping()
    DrawLine((x1 / z1) * FL, (y1 / z1) * FL, (x2 / z2) * FL, (y2 / z2) * FL)
  }
}

function DrawText(RenderX: number, RenderY: number, text: string[]) {
  for (let i = 0; i < text.length; i++) {
    let DrawStartPos = {
      x: RenderX + (i + 1) * LetterWidth + (i + 1) * LetterSpacing,
      y: RenderY,
    }
    switch (text[i]) {
      case " ":
        break

      case "A":
        // Diagonale von oben links nach unten in die Mitte
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
          DrawStartPos.x + halfLineSize,
          DrawStartPos.y,
        )
        // Diagonale von oben rechts nach unten in die Mitte
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
          DrawStartPos.x + halfLineSize,
          DrawStartPos.y,
        )
        // Horizontale Querlinie im Buchstaben A
        DrawLine(
          DrawStartPos.x + halfLineSize / 2,
          DrawStartPos.y - LetterHeight / 2,
          DrawStartPos.x + lineSize - halfLineSize / 2,
          DrawStartPos.y - LetterHeight / 2,
        )
        break

      case "B":
        // Linke senkrechte Linie
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
        )
        // Oberer Bogen
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight * 0.25,
        )
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight * 0.25,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight / 2,
        )
        // Unterer Bogen
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight / 2,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight * 0.75,
        )
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight * 0.75,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
        )
        break

      case "C":
        // Obere horizontale Linie (von rechts nach links)
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y,
        )
        // Linke senkrechte Linie
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
        )
        // Untere horizontale Linie (von links nach rechts)
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        break

      case "D":
        // Linke senkrechte Linie
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
        )
        // Obere horizontale Linie
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x + LetterWidth,
          DrawStartPos.y,
        )
        // Untere horizontale Linie
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
          DrawStartPos.x + LetterWidth,
          DrawStartPos.y - LetterHeight,
        )
        // Schräge Verbindungslinie
        DrawLine(
          DrawStartPos.x + LetterWidth - 3,
          DrawStartPos.y,
          DrawStartPos.x + LetterWidth,
          DrawStartPos.y - LetterHeight,
        )
        break

      case "E":
        // Linke senkrechte Linie
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
        )
        // Obere horizontale Linie
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
        )
        // Mittlere horizontale Linie
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight / 2,
          DrawStartPos.x + lineSize * 0.7,
          DrawStartPos.y - LetterHeight / 2,
        )
        // Untere horizontale Linie
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        break

      case "F":
        // Linke senkrechte Linie
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
        )
        // Obere horizontale Linie
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
        )
        // Mittlere horizontale Linie
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight / 2,
          DrawStartPos.x + lineSize * 0.7,
          DrawStartPos.y - LetterHeight / 2,
        )
        break

      case "G":
        // Linke senkrechte Linie
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
        )
        // Obere horizontale Linie
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
        )
        // Untere horizontale Linie
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        // Rechte vertikale nur im unteren Teil
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight / 2,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        // Horizontaler "Cut-In"
        DrawLine(
          DrawStartPos.x + halfLineSize,
          DrawStartPos.y - LetterHeight / 2,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight / 2,
        )
        break

      case "H":
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight / 2,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight / 2,
        )
        break

      case "I":
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
        )
        DrawLine(
          DrawStartPos.x + LetterWidth / 2,
          DrawStartPos.y,
          DrawStartPos.x + LetterWidth / 2,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        break

      case "J":
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
        )
        DrawLine(
          DrawStartPos.x + halfLineSize,
          DrawStartPos.y,
          DrawStartPos.x + halfLineSize,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x - halfLineSize / 3,
          DrawStartPos.y - LetterHeight + halfLineSize / 3,
          DrawStartPos.x + halfLineSize,
          DrawStartPos.y - LetterHeight,
        )
        break

      case "K":
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight / 2,
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight / 2,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        break

      case "L":
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        break

      case "M":
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x + halfLineSize,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x + halfLineSize,
          DrawStartPos.y - LetterHeight,
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
        )
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        break

      case "N":
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - halfLineSize / 2,
          DrawStartPos.x + LetterWidth / 1.5,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        break

      case "O":
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        break

      case "P":
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight / 2,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight / 2,
        )
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight / 2,
        )
        break

      case "Q":
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x + halfLineSize,
          DrawStartPos.y - LetterHeight / 2,
          DrawStartPos.x + lineSize + 2,
          DrawStartPos.y - LetterHeight - 2,
        )
        break

      case "R":
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight / 2,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight / 2,
        )
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight / 2,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight / 2,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        break

      case "S":
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - halfLineSize / 3,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight / 2,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight / 2,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight / 2,
        )
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight / 2,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight + halfLineSize / 3,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        break

      case "T":
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
        )
        DrawLine(
          DrawStartPos.x + halfLineSize,
          DrawStartPos.y,
          DrawStartPos.x + halfLineSize,
          DrawStartPos.y - LetterHeight,
        )
        break

      case "U":
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight + 3,
        )
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight + 3,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight + 3,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight + 3,
        )
        break

      case "V":
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x + halfLineSize,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x + halfLineSize,
          DrawStartPos.y - LetterHeight,
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
        )
        break

      case "W":
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x + halfLineSize / 2,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x + halfLineSize / 2,
          DrawStartPos.y - LetterHeight,
          DrawStartPos.x + halfLineSize,
          DrawStartPos.y,
        )
        DrawLine(
          DrawStartPos.x + halfLineSize,
          DrawStartPos.y,
          DrawStartPos.x + halfLineSize + halfLineSize / 2,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x + halfLineSize + halfLineSize / 2,
          DrawStartPos.y - LetterHeight,
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
        )
        break

      case "X":
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
        )
        break

      case "Y":
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x + halfLineSize,
          DrawStartPos.y - LetterHeight / 2,
        )
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
          DrawStartPos.x + halfLineSize,
          DrawStartPos.y - LetterHeight / 2,
        )
        DrawLine(
          DrawStartPos.x + halfLineSize,
          DrawStartPos.y - LetterHeight / 2,
          DrawStartPos.x + halfLineSize,
          DrawStartPos.y - LetterHeight,
        )
        break

      case "Z":
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
        )
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        break

      case "0":
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x + LetterWidth / 1.5,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
        )
        break

      case "1":
        DrawLine(
          DrawStartPos.x + halfLineSize,
          DrawStartPos.y,
          DrawStartPos.x + halfLineSize,
          DrawStartPos.y - LetterHeight,
        )
        break

      case "2":
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
        )
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight / 2,
        )
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight / 2,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight / 2,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight / 2,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        break

      case "3":
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
        )
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight / 2,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight / 2,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        break

      case "4":
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight / 2,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight / 2,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight / 2,
        )
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        break

      case "5":
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight / 2,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight / 2,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight / 2,
        )
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight / 2,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        break

      case "6":
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight / 2,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight / 2,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight / 2,
        )
        break

      case "7":
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
        )
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
        )
        break

      case "8":
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight / 2,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight / 2,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        break

      case "9":
        DrawLine(
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight / 2,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight / 2,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight / 2,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y,
          DrawStartPos.x + lineSize,
          DrawStartPos.y,
        )
        break
      case "=":
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight / 2 + LetterHeight / 5,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight / 2 + LetterHeight / 5,
        )
        DrawLine(
          DrawStartPos.x,
          DrawStartPos.y - LetterHeight / 2 - LetterHeight / 5,
          DrawStartPos.x + lineSize,
          DrawStartPos.y - LetterHeight / 2 - LetterHeight / 5,
        )
        break
    }
  }
}
